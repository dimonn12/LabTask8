<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    ">

	<context:annotation-config />
	<context:component-scan base-package="com.epam.hibernateapp"></context:component-scan>

	<bean name="/index /employee /add" id="employeeAction"
		class="com.epam.hibernateapp.presentation.action.EmployeeAction"
		scope="singleton">
		<property name="employeeFacade" ref="employeeFacade" />
	</bean>

<!-- 	<bean id="abstractDao" class="com.epam.hibernateapp.database.HibernateDaoImpl" 
		abstract="true"> <property name="sessionFactory" ref="sessionFactory" /> 
		</bean> -->

	<!-- <bean id="abstractDao" class="com.epam.hibernateapp.database.JPADaoImpl" 
		abstract="true"> </bean> -->

	<bean id="abstractDao" class="com.epam.hibernateapp.database.JDBCDaoImpl"
		abstract="true">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="com.epam.hibernateapp.database.util.CustomNamingStrategy" />
		</property>
		<property name="showSql" value="false"/>
	</bean>

<!-- 	<bean id="employeeDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Employee</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="cityDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.City</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="countryDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Country</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="addressDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Address</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="companyDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Company</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="officeDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Office</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="positionDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Position</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="workstationDao" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Workstation</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	 -->
	<bean id="employeeDao" class="com.epam.hibernateapp.database.jdbc.EmployeeJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Employee</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
		<property name="workstationDao" ref="workstationDao" />
	</bean>
	<bean id="cityDao" class="com.epam.hibernateapp.database.jdbc.CityJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.City</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="countryDao" class="com.epam.hibernateapp.database.jdbc.CountryJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Country</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="addressDao" class="com.epam.hibernateapp.database.jdbc.AddressJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Address</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="companyDao" class="com.epam.hibernateapp.database.jdbc.CompanyJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Company</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="officeDao" class="com.epam.hibernateapp.database.jdbc.OfficeJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Office</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="positionDao" class="com.epam.hibernateapp.database.jdbc.PositionJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Position</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>
	<bean id="workstationDao" class="com.epam.hibernateapp.database.jdbc.WorkstationJDBCDaoImpl" parent="abstractDao" init-method="init">
		<constructor-arg>
			<value>com.epam.hibernateapp.model.Workstation</value>
		</constructor-arg>
		<constructor-arg>
			<value>java.lang.Integer</value>
		</constructor-arg>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
		<property name="removeAbandoned" value="true" />
		<property name="initialSize" value="15" />
		<property name="maxActive" value="2" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath:/hibernate/Employee.hbm.xml</value>
				<value>classpath:/hibernate/Country.hbm.xml</value>
				<value>classpath:/hibernate/Address.hbm.xml</value>
				<value>classpath:/hibernate/Company.hbm.xml</value>
				<value>classpath:/hibernate/City.hbm.xml</value>
				<value>classpath:/hibernate/Office.hbm.xml</value>
				<value>classpath:/hibernate/Position.hbm.xml</value>
				<value>classpath:/hibernate/Workstation.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="debug">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.enable_lazy_load_no_trans">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:/ehcache.xml</prop>
			</props>
		</property>
		<property name="namingStrategy">
			<bean class="com.epam.hibernateapp.database.util.CustomNamingStrategy" />
		</property>
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.epam.hibernateapp.model" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.show_sql" value="false" />
				<entry key="hibernate.format_sql" value="true" />
				<entry key="debug" value="true" />
				<entry key="hibernate.cglib.use_reflection_optimizer" value="true" />
				<entry key="hibernate.dialect" value="org.hibernate.dialect.OracleDialect" />
				<entry key="hibernate.hbm2ddl.auto" value="create-drop" />
				<entry key="hibernate.enable_lazy_load_no_trans" value="true" />
				<entry key="hibernate.cache.use_second_level_cache" value="true" />
				<entry key="hibernate.cache.use_query_cache" value="true" />
				<entry key="hibernate.ejb.naming_strategy"
					value="com.epam.hibernateapp.database.util.CustomNamingStrategy" />
				<entry key="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory" />
				<entry key="hibernate.cache.use_structured_entries" value="true" />
				<entry key="hibernate.cache.provider_configuration_file_resource_path"
					value="classpath:/ehcache.xml" />
			</map>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="entityManagerFactory" ref="entityManagerFactory" /> </bean> -->

	<bean id="employeeFacade"
		class="com.epam.hibernateapp.presentation.facade.EmployeeFacadeImpl">
		<property name="employeeDao" ref="employeeDao" />
		<property name="databaseService" ref="databaseService" />
	</bean>

	<bean id="databaseService"
		class="com.epam.hibernateapp.presentation.service.DatabaseServiceImpl"
		autowire="byName" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get" propagation="SUPPORTS" />
			<tx:method name="getEmployeeList" propagation="REQUIRED" />
			<tx:method name="saveOrUpdate" propagation="REQUIRED" />
			<tx:method name="fill*" propagation="REQUIRED" />
			<tx:method name="getTotalCount" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor id="employeeFacadeAdvisor"
			pointcut="execution(* com.epam.hibernateapp.presentation.facade.EmployeeFacadeImpl.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor id="databaseSerivceAdvisor"
			pointcut="execution(* com.epam.hibernateapp.presentation.service.DatabaseServiceImpl.*(..))"
			advice-ref="txAdvice" />
	</aop:config>
</beans>